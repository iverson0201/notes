
vim显示行号、语法高亮、自动缩进的设置 
http://blog.csdn.net/chuanj1985/article/details/6873830

apt-get 与 yum的区别 (转) 
http://blog.csdn.net/mathewsking/article/details/8211273

 [zip文件] putty 工具 pscp.exe等
http://download.csdn.net/detail/lch_cn/4826579#comment

linux-linux、linux-windows 之间快速传文件 (转)  
http://blog.163.com/netsafe_liulei@126/blog/static/52990159201191344354246/


pscp yum-3.2.29-40.el6.centos.noarch.rpm root@192.168.10.16:/usr/local/citylife
1qazxsw2

pscp rzsz-3.48.tar.gz root@192.168.10.16:/usr/local/citylife


CentOS通过命令RZ/SZ传文件，非FTP方式
http://wapapp.baidu.com/yinyue_yymusic/item/79fd8c33788712b3124b1449


去掉"UNREGISTERED COPY"提示
**** UNREGISTERED COPY *****
Please read the License Agreement in rz.doc
解决方法:
修改Makefile第四行OFLAG= -O 为 OFLAG= -O -DREGISTERED(也可以修改源代码)
http://cache.baiducontent.com/c?m=9d78d513d9811ff80bacc3690d6797314a0297634d918a4268d4e216c8350c1d0631f4bb56714544849223305de95e5c9bab6a65377260ff8cc9f85dddcc85295fde7a65645bc61f1d895fe9895124b23d8d1facea0ee7cda16ec3f08f869e4353bd0258259daad71a534f9631ae0962a3f7c31351080dbaef3366e25b73349f255db645f3ea37640296f6aa060a9c74&p=c270c54ad5c44ab142fbc7710f7a86&newp=8d7cc64ad4942dec03bd9b7d0a1d97231610db2151d0d71f28b8d013&user=baidu&fm=sc&query=Please+read+the+License+Agreement+in+rz.doc&qid=c330b56500003f32&p1=1


tar zxvf rzsz-3.48.tar.gz 

echo $PATH

export PATH=$PATH:.:/usr/java/jdk1.7.0_71/bin::/usr/lib64/qt-3.3/bin:/usr/local/sbin:/usr/local/bin:/sbin:/bin:/usr/sbin:/usr/bin:/root/bin:/usr/local/apache-maven-2.2.1/bin


JAVA_HOME=/usr/java/jdk1.7.0_71
JRE_HOME=/usr/java/jdk1.7.0_71/jre
PATH=$PATH:$HOME/bin:$JAVA_HOME/bin:$JRE_HOME/bin:/opt/citylife/mongodb
CLASSPATH=.:$JAVA_HOME/lib/dt.jar:$JAVA_HOME/lib/tools.jar:$JRE_HOME/lib
export PATH JAVA_HOME JRE_HOME CLASSPATH

source /etc/profile 
source ~/.bash_profile文件使环境变量生效 

检查环境变量，echo $PATH 

Linux 的cp命令
http://www.cnblogs.com/xd502djj/archive/2011/11/25/2263562.html


查看linux系统版本命令 
http://blog.csdn.net/zhuying_linux/article/details/6859286

利用ext3grep工具恢复误删除文件
http://www.2cto.com/Article/201310/252749.html

命令测试

$ git push origin master
Username for 'https://github.com': iverson0201


内网地址15：http://192.168.10.15:8080/citylife/api/v1/user/541bf4de9fa52afb78246a26
内网地址16：http://192.168.10.16:8080/citylife/api/v1/user/541bf4de9fa52afb78246a26

内网地址：http://192.168.10.16/citylife/api/v1/user/541bf4de9fa52afb78246a26

------
nginx 在16上
mongodb、redis、Elasticsearch 在15上


--------------
全文检索

内存不够，机器内存2G
wrapper  | JVM exited while loading the application.
jvm 1    | Error occurred during initialization of VM
jvm 1    | Could not reserve enough space for object heap

vim elasticsearch.conf 
#set.default.ES_HEAP_SIZE=2048
set.default.ES_HEAP_SIZE=1024

 ./elasticsearch console

----------
mongoVUE, 可以选择使用本地时区
Tools ---> Preferences ---> Views ---> Local Timezone


mongoTemplate.updateEntity(query(where("id").is(id)), update("title", params.get("title")));

-----------------
-- windows下连，centos端mongodb服务，连接被拒绝
Unable to connect to server mongodb
mongodb 遇到 mongodb couldn't connect to server 127.0.0.1 shell/mongo.js错误时 
http://blog.csdn.net/emmetyoung/article/details/7340861



-------------
Find in Json
{
"replyFollow.headImage" : "tp01.jpg"
}
Enter Update Json
{
$set: {"replyFollow.headImage" : "http://legendtech-video.qiniudn.com/938320141028175322.png"}
}

------------
Find in Json
{
"backer.headImage" : "tp01.jpg"
}
Enter Update Json
{
$set: {"backer.headImage" : "http://legendtech-video.qiniudn.com/938320141028175322.png"}
}

{
"images" : "http://legendtech-video.qiniudn.com/938320141028175322.png"
}


-------------
2014.11.03
CentOS 6.4 下搭建 MongoDB 2.4.9 环境
http://www.shaoqun.com/a/85470.aspx


MongoDB River Plugin 	ElasticSearch 	MongoDB 
master			1.3.1 		2.6.3 	
2.0.1			1.2.2 		2.4.9 -> 2.6.3 	
2.0.0 			1.0.0 -> 1.1.1 	2.4.9 	


-----------------------
mongodb进阶（2）：副本集 
http://blog.csdn.net/wutbiao/article/details/22163325

-- mongdb副本集
--node1.conf
port = 10001
dbpath = dbs/node1
logpath = logs/node1.log
#添加多个时，直接用逗号分割，如：rset\192.168.90.7:10002,192.168.90.7:10003
replSet = rset/192.168.10.16:10002

--node2.conf
port = 10002
dbpath = dbs/node2
logpath = logs/node2.log
#添加多个时，直接用逗号分割
replSet = rset/192.168.10.15:10001


bin/mongod --config conf/node1.conf

bin/mongod --config conf/node2.conf

--连接副本集中的任意机器
mongo localhost:10001 
--初始化副本集
use admin  
db.runCommand({"replSetInitiate":{"_id":"rset","members":[{"_id":1,"host":"192.168.10.15:10001"},{"_id":2,"host":"192.168.10.16:10002"}]}} )

--测试
use mydb
db.c1.insert({age:30})
db.c1.find()

-- 从库报错，error: { "$err" : "not master and slaveOk=false", "code" : 13435 }

--让从库可以读，分担主库的压力
db.getMongo().setSlaveOk()

 ps aux|grep mongod


 ---------------

 3、启动elasticsearch 
 sh elasticsearch start

 4、下载river插件
./plugin --install com.github.richardwilly98.elasticsearch/elasticsearch-river-mongodb/2.0.0


执行shell出现bad interpreter
http://blog.chinaunix.net/uid-25052030-id-94244.html
用set ff=unix把它强制为unix格式的


5、列出所有端口 
netstat -ntlp

6、查找命令
find / -name "*tomcat*";

7、开发流程与各层软件选型
http://www.cnblogs.com/littlehb/archive/2013/05/10/3071176.html


8、./configure,make,make install的作用
http://www.linuxidc.com/Linux/2011-02/32211.htm

怎么卸载用 make install 编译安装的软件？ 
http://www.zhihu.com/question/20092756

head logs/catalina.out  

-----------
9、yum不能更新下载的问题 （ Couldn't resolve host 'yum.mariadb.org' ）
yum 安装时错误 Errno 14 Couldn't resolve host 解决办法 
http://blog.csdn.net/spyiu/article/details/25163101
修改一下 /etc/resolv.conf

添加一个nameserver 8.8.8.8完成
nameserver 8.8.8.8
nameserver 8.8.4.4



yum install openssl openssl-devel -y 


10、tomcat的apr测试在15上

11、用elasticsearch索引mongodb数据 （重点）
http://www.cnblogs.com/ciaos/p/3601209.html



12、centos安装ab

yum install httpd-tools

准备之后我们就可以测试了

ab -kc 1000 -n 10000 http://192.168.10.16/citylife/api/v1/user/541bf4de9fa52afb78246a26


13、tomcat启动警告
'maxSpareThreads' to '2048' did not find a matching property

Tomcat性能调优后， 启动出现警告问题 [did not find a matching property.] 
解释：在配置tomcat的SSL双向握手中，由于6.0.36版本中默认启用了APR（APR是通过JNI访问的可移植库，可以提高Tomcat的性能和伸缩性），所以采用传统的配置方式会报异常

Tomcat7不支持maxSpareThreads，去掉即可
http://mclulu33.blog.163.com/blog/static/20091017720143286347742/



@ModelAttribute
@Component
@Transactional(readOnly = true)
@RequiresPermissions("topic:view")


---------
1、关注点不能太多，POI数据不能和餐饮、购物等数据混在一起。
2、餐饮、购物依赖POI对象。
3、点击详情，加载 餐饮 + POI 数据。（需要多少，加载多少）

领域对象，关注点分离

【重构笔记04】重新组织数据（我好像明白了什么是数据与行为分离）
http://www.cnblogs.com/yexiaochai/p/3397767.html
领域驱动设计和实践
http://kb.cnblogs.com/page/112298/
UML之JUDE{Astah}使用介绍
http://www.cnblogs.com/boonya/archive/2013/03/17/2964650.html
好东西
http://runjs.cn/
mysql建表时key关键字的作用是什么？
http://www.oschina.net/question/203016_71920?sort=time


4、hibernate事务问题 Queries leading to data modification are not allowed
read_only="true"
Connection is read-only. Queries leading to data modification are not allowed
http://liukai.iteye.com/blog/359607

@Transactional(readOnly = false)
public void delete(String id) {
		// TODO Auto-generated method stub
		topicDao.deleteById(id);
	}



----------
2014.11.07
升级jar包，有冲突，因为referenced libraries下有一份旧的jar包
Duplicate fragment name，spring-web jar包冲突，删除referenced libraries下的所有jar包
org/springframework/objenesis/ObjenesisStd
taglib.jsp，缺少jstl标签，spring-webmvc的form标签，添加jstl-1.2.jar和spring-webmvc-4.1.1.RELEASE.jar到referenced libraries下


elasticsearch索引mongodb数据


-------------------
39、商家评论、点评 POST
"poiId" : "543e378c9fa5af869ee2d45e"
{
 "content" : "评论001",
 "images" : [ "pltp1.png", "pltp2.png" ],
 "comment" :
      {
	"userId" : "541bf4de9fa52afb78246a26",
	"userName" : "评论人005",
	"headImage" : "http://legendtech-video.qiniudn.com/11.jpg"
      },
 "poiId" : "543e378c9fa5af869ee2d45e",
 "poiImage" : "ywds.jpg"
}
http://192.168.40.184:8080/citylife/api/v1/poi/comment/{poiId}

字段冗余问题，返回信息包含：
 "name" : "欲望都市",
 "type" : "酒吧",
 "address" : "蓝色港湾国际商区LW16号",
 "marks" : ["夏威夷披萨","迷情沙漠"]


---创建java项目 
mvn archetype:create -DgroupId=com.citylife.backend -DartifactId=citylife-jar -DarchetypeArtifactId=maven-archetype-quickstart

---创建web项目
mvn archetype:create -DarchetypeGroupId=org.apache.maven.archetypes -DarchetypeArtifactId=maven-archetype-webapp -DgroupId=com.citylife.backend -DartifactId=citylife--test-web2

mvn archetype:create -DarchetypeGroupId=org.apache.maven.archetypes -DarchetypeArtifactId=maven-archetype-webapp -DgroupId=com.iverson -DartifactId=DataStructure


--shiro filter filterChainDefinitions
http://dwangel.iteye.com/blog/1890524
http://blog.csdn.net/clj198606061111/article/details/24185023
http://www.ibm.com/developerworks/cn/opensource/os-cn-shiro/
没错。 我的Realm配置了加密器的。 MD5单向加密，你看spring-shior.xml就知道了。 
http://yingzhuo.iteye.com/blog/1709002 shiro Realm配置 加密

shiro url授权

shiro怎么进行URL授权
http://www.iteye.com/problems/94523

shiro 基于URL的授权验证

shiro根据角色来进行权限验证，后台新增了一个角色后，每次都要去更新shiro.ini
http://www.oschina.net/question/948439_165825

拦截类型
http://zgzty.blog.163.com/blog/static/838312262012897502193/


让Apache Shiro保护你的应用 
http://www.infoq.com/cn/articles/apache-shiro



http://192.168.40.184:8090/citylife/api/v1/poi/comment/list/543e378c9fa5af869ee2d45e?size=10&page=1

http://192.168.40.184:8090/citylife/api/v1/poi/reply/list/546461721f8fe9bdc0e0af44?size=10&page=1



aop相关
http://git.oschina.net/search?utf8=%E2%9C%93&search=aop&group_id=&project_id=4253
主题：学习Spring必学的Java基础知识(1)----反射
http://www.iteye.com/topic/1123081
AOP 那点事儿
http://my.oschina.net/huangyong/blog/161338


E:\project\citylife-prototype-web>mvn dependency:tree -Dverbose > "e:\project\a
.txt"

--1128
Shiro 那点事儿
http://my.oschina.net/huangyong/blog/208783

将 Shiro 作为应用的权限基础 五：SpringMVC+Apache Shiro+JPA（hibernate）整合配置 
http://blog.csdn.net/tch918/article/details/13887189

SpringMVC整合Shiro 
http://blog.csdn.net/jadyer/article/details/12208847

citylife2188

--1216
file:///D:/citylife_prd/%E5%90%8E%E5%8F%B0%E5%8E%9F%E5%9E%8B/%E5%90%8E%E5%8F%B0%E5%8E%9F%E5%9E%8B/index.html#p=poi%E5%88%86%E7%B1%BB%E7%AE%A1%E7%90%86

file:///D:/citylife_prd/%E4%BA%A7%E5%93%81%E5%8E%9F%E5%9E%8B/V1.1/index.html#p=%E4%B8%AA%E4%BA%BA%E9%A1%B5%EF%BC%88%E5%88%86%E4%BA%AB%E9%A1%B5%EF%BC%89

http://tieba.baidu.com/p/2909148389

https://192.168.10.20/svn/citylife_app_dev/trunk/src/server/citylife-jar/

-- 1217
自定义注解的使用
对某个方法进行自定义注解：反射类对象，判断是否有注解，执行注解方法里面的操作。

java.lang.Package.getAnnotation()方法实例
http://www.yiibai.com/java/lang/package_getannotation.html

--1218
eclipse加速之禁用JS、jsp等文件的语法验证
http://www.th7.cn/Program/java/201409/275100.shtml
Eclipse很卡的解决方法  
http://daizhenghua.good.blog.163.com/blog/static/105287726201362734241902/


--1222 elasticsearch 关键字
elasticsearch 实现联想输入搜索
http://www.656463.com/article/22Ibqu.htm
ElasticSearch Bulk,Search操作
http://hi.baidu.com/donlian
全文搜索之 Elasticsearch 
http://symphony.b3log.org/article/1403514935887




网上搜了一下，说是clustername 制定错误。用http://localhost:9200/_cluster/health/ 查看了一下
http://www.chepoo.com/org-elasticsearch-client-transport-no-node-available-exception.html

--1225
使用elasticsearch遇到的一些问题以及解决方法（不断更新）
http://itindex.net/detail/51176-elasticsearch-%E9%97%AE%E9%A2%98-%E6%96%B9%E6%B3%95


----------
--1230
maven的Missing artifact问题解决 
http://blog.csdn.net/liyangmengyao/article/details/27704953

 解决方案：在报错的firstweb项目pom.xml 文件中添加插件
                       <plugin>
                               <groupId>org.apache.felix</groupId>
                              <artifactId>maven-bundle-plugin</artifactId>
                              <version>2.4.0</version>
                              <extensions>true</extensions>
                    </plugin>
      这样就可以了~~

Maven 那点事儿
http://my.oschina.net/huangyong/blog/194583

--1231
http://www.devstore.cn/code/list/dl44-dt60-pn1-or0.html DevStore 源码列表
最近一直在研究java一些核心的设计，发现两篇好文章，推荐下。
http://www.oschina.net/question/184206_218259

--分词
ElasticSearch OSChina
http://www.oschina.net/search?scope=project&tag1=0&tag2=0&lang=0&os=0&q=ElasticSearch&p=2
Java中文分词组件 word
http://www.oschina.net/p/word
photon/src/test/java/de/komoot/photon/ESBaseTester.java
https://github.com/komoot/photon/blob/master/src/test/java/de/komoot/photon/ESBaseTester.java
ElasticSearch 项目搜索
http://git.oschina.net/search?utf8=%E2%9C%93&search=ElasticSearch&group_id=&project_id=118339

【Java线程】Java内存模型总结 
http://blog.csdn.net/vking_wang/article/details/8574376

黄勇 	
http://my.oschina.net/huangyong/blog/194583

MockMvc
 加速Java应用开发速度3——单元/集成测试+CI 
http://jinnianshilongnian.iteye.com/blog/1893135
Spring MVC测试框架详解——服务端测试
http://jinnianshilongnian.iteye.com/blog/2004660

ios 消息推送 极光推送

Spring MVC 单元测试 
http://blog.csdn.net/webrobot/article/details/18405803
Spring MVC测试框架详解——服务端测试
http://www.kankanews.com/ICkengine/archives/103341.shtml

--0104
技术干货
http://lzxz1234.github.io/categories.html
github.com/lzxz1234/

--0105
mockMvc、restApi 测试
github
https://github.com/khoubyari/spring-boot-rest-example/blob/master/src/test/java/com/khoubyari/example/test/HotelControllerTest.java
如何为 SpringMVC 编写单元测试：REST API 篇
http://lzxz1234.github.io/junit/2014/07/16/Unit-Testing-of-Spring-MVC-Controllers-REST-API/
基于Spring-WS的Restful API的集成测试
http://ningandjiao.iteye.com/blog/1982635

--0108
metrics 导致项目启动过慢
16:36:49.464 [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'securityManager' of type [class org.apache.shiro.web.mgt.DefaultWebSecurityManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
16:36:49.510 [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'metricsConfig' of type [class com.citylife.backend.metrics.MetricsConfig$$EnhancerBySpringCGLIB$$38ef4f25] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
16:36:49.510 [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'com.ryantenney.metrics.spring.config.annotation.DelegatingMetricsConfiguration' of type [class com.ryantenney.metrics.spring.config.annotation.DelegatingMetricsConfiguration$$EnhancerBySpringCGLIB$$dbbff955] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
16:36:49.557 [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'getMetricRegistry' of type [class com.codahale.metrics.MetricRegistry] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
16:36:49.573 [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'getHealthCheckRegistry' of type [class com.codahale.metrics.health.HealthCheckRegistry] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)

--0109
Java不同压缩算法的性能比较
http://it.deepinmind.com/java/2015/01/04/performance-general-compression.html

玄妙的设计模式 
http://blog.csdn.net/Raptor/article/details/4933667

把《编程珠玑》读薄
http://www.hawstein.com/posts/make-thiner-programming-pearls.html

建筑的永恒之道----道 
http://blog.csdn.net/tiewen/article/details/8697093


--0113
玄妙的设计模式 
http://blog.csdn.net/Raptor/article/details/4933667
如何清晰地思考：近一年来业余阅读的关于思维方面的知识结构整理（附大幅思维导图） 
http://blog.csdn.net/pongba/article/details/3549560

--0115
使用Mongo Connector和Elasticsearch实现模糊匹配
http://www.csdn.net/article/2014-09-02/2821485-how-to-perform-fuzzy-matching-with-mongo-connector
程序员必须知道的10大基础实用算法及其讲解 
http://blog.csdn.net/lb891014/article/details/34090301
快课网  架构设计 
http://www.cricode.com/category/design/architecture
java 中 mongodb的各种操作 模糊查询
http://www.cnblogs.com/ry123/p/3863155.html


如何设计MongoDB数据模型 
http://favccxx.blog.51cto.com/2890523/1547217
http://blog.51cto.com/tagindex.php?keywords=mongodb&keyword=mongodb&job=&jobs=&page=8
mongodb中的数据建模 
http://caizi.blog.51cto.com/5234706/1542484
写给MongoDB开发者的50条建议Tip1 
http://virusswb.blog.51cto.com/115214/793135
从关系型数据库到非关系型数据库
http://7399921.blog.51cto.com/7389921/1584568
详解基于MongoDB的地理位置查询，结合Symfony2演示
http://henter.me/post/mongodb-geospatial-query-symfony2-demo.html

mongodb连接查询的一种方式：查出10条数据，in拼接userCommentId，查询user表


--0116
List ADD时去除重复对象代码 
http://blog.csdn.net/yy_2011/article/details/7217618

--0121
为什么选择MongoDB数据库
http://www.aseoe.com/show-72-438-1.html

MongoDB的使用学习之（七）MongoDB的聚合查询（两种方式）附项目源码 
http://www.cnblogs.com/ontheroad_lee/p/3756247.html

vim /etc/rc.d/init.d
vim /sbin/service 
cd /etc/init.d
chkconfig --add tomcatd
chkconfig --list


http://192.168.40.184:8088/citylife-boss/admin

http://182.92.1.110:8090/boss/admin

centos直接yum安装nginx
http://shmily2038.iteye.com/blog/1860063

1、CentOS 6，先执行：
rpm -ivh http://nginx.org/packages/centos/6/noarch/RPMS/nginx-release-centos-6-0.el6.ngx.noarch.rpm
2，查看yum的nginx信息

[]# yum info nginx

3，安装并启动nignx
[root@server ~]# yun install nignx
[root@server ~]# service nginx start
Starting nginx:                                            [  OK  ]

4，然后进入浏览器，输入http://182.92.1.110/测试，如果看到

linux下安装nginx
http://www.cnblogs.com/kunhu/p/3633002.html

http://182.92.1.110:8090/boss/admin

mongdb异常
WARNING: Unable to register MBean org.mongodb.driver:type=ConnectionPool



http-bio-8090-exec-5" java.lang.OutOfMemoryError: PermGen space
内存泄露java.lang.OutOfMemoryError: PermGen space解决办法
http://www.07net01.com/zhishi/261769.html
直接处理方式是
JAVA_OPTS="-server -Xms256m -Xmx1024m -XX:MaxNewSize=256m -XX:PermSize=64M -XX:MaxPermSize=128M" 

关于jvm的解释

我看好多人并不设置这个MaxNewSize参数 请问这个参数有什么用？

这参数是设置JAVA堆区域新生代内存的最大可分配大小。一般堆区会分为3个区域，新生代、中生代和老年代。
我们在程序中通过new关键字新建出来的对象，一般都会分配在新生代中。当新生代满了后，JVM会通过GC来进行一次小规模的垃圾回收，此时新生代中存活的对象会被移动至中生代。
你所说的这个参数就是设置新生代的最大值，从上可知，这个大小也间接决定了JVM进行monior gc的频率。如果你不设置，JVM启动时会给它一个默认值。

追问

那perm size 和heap size 哪个是中生代 哪个是老生代？

回答

perm size 指的是永久代，也就是方法区，和我们通常说的堆区(heap)有一些区别，堆区中存放的是new出来的对象，方法区存的是类的信息、静态属性、常量池等信息。
而heap size指的就是堆区了，堆区里面包含新生代、中生代和老年代。
所以perm size不指中生代和老年代，perm size代表的是方法区，heap size里面包含了中生代和老年代

深入Java虚拟机之虚拟机体系结构
http://yshjava.iteye.com/blog/1327778
java里的静态变量是放在了堆内存还是栈内存？
http://bbs.csdn.net/topics/370001490
--0128
拼音 --- oschina
http://www.oschina.net/search?scope=project&tag1=0&tag2=0&lang=0&os=0&q=%E6%8B%BC%E9%9F%B3&p=1
ElasticSearch --- oschina
http://git.oschina.net/search?utf8=%E2%9C%93&search=ElasticSearch


--0130
Collections.sort() 对 List <对象>排序
http://jiake.iteye.com/blog/207038

http://www.zhihu.com/search?q=ajoo&type=question
名著类 - ajoo
http://www.blogjava.net/ajoo/category/6968.html
领域模型的种种观点
http://blog.csdn.net/soleghost/article/details/629048
使用 Google Guava 美化你的 Java 代码：1~4
http://my.oschina.net/leejun2005/blog/172328
Elasticsearch 权威指南（中文版）
http://looly.gitbooks.io/elasticsearch-the-definitive-guide-cn/content/030_Data/25_Update.html

JAVA工具集 common-tools
 github地址在：https://github.com/looly/common-tools 
 http://my.oschina.net/looly/blog/109363
 原	荐	简化你的 java 字符串操作：Guava 之 CharMatcher 用法简介
 http://my.oschina.net/leejun2005/blog/178569
 使用 Google Guava 美化你的 Java 代码：1~4 
http://blog.csdn.net/wisgood/article/details/13297535
瓜娃之走马观花 (1) - List和Map (ajoo)
http://ajoo.iteye.com/blog/735368 
